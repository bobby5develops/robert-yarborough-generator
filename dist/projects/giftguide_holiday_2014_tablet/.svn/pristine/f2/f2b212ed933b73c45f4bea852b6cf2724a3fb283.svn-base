

var TopgiftsPage = GgPage.extend({


	/* Initialize any variables that will be needed */
	init: function(params) {

		var params = {
				 	title: "topgifts",
					url: "html/topgifts.html",
					navId: "topgifts",
					preLoad: [

							  ]
				 }

		this._super(params);

	},

	/* Setup your event handlers */
	setup: function() {
		this._super();


	},

	/* Handle Deeplinking */
	processParams: function()
	{
		this._super();
        var deeplink = finder.getCurrentPage().params.argc[0];
        if(deeplink == undefined){
            console.log('Landing Page');
            var $chosen = $('#animewrapper').find('.animebucket.' + finder.getCurrentPage().title);
            $chosen.show().siblings().hide();
        }else{
            this.buildTopGiftsSectionPage(deeplink);
            console.log('deeplink: ',deeplink);
            // SHOW AND HIDE THE CORRECT BUCKET

            // determine the $chosen anime bucket based on the hashtag and url
            var chosen = this.params.argc[0];

            // the topgifts landing uses the next arg so concat.  example 'topgifts' becomes 'topgifts-him'
            if (this.params.argc[0]) chosen+= '-'+this.params.argc[1];
            var $chosen = $('#animewrapper').find('.animebucket.' + chosen);
            $chosen.show().siblings().hide();

            var divToShow = '#animewrapper .'+this.params.argc[0]
            $(divToShow).show().siblings().hide();
        }



        //  ANIMATION

        // within $chosen, animate anything designated as left
        var leftStartDelay = 0;
        var leftArea = 0;
        $chosen.find('[anime="left"]').each(function(e){
            TweenMax.from($(this), .6, {css:{'opacity':0,'left':'-100', 'top':(leftArea)}, delay: leftStartDelay });
            leftStartDelay += .1;
            leftArea += 75;
        });

        // within $chosen, animate anything designated as top
        var topStartDelay = 0;
        $chosen.find('[anime="top"]').each(function(e){
            TweenMax.from($(this), .6, {css:{'opacity':0, 'top':-100}, delay: topStartDelay });
            topStartDelay += .1;
        });

        // within $chosen, animate anything designated as bottom
        var bottomStartDelay = 0.6;
        var bottomHeight = $('#pageContainer').height();
        $chosen.find('[anime="bottom"]').each(function(e){
            TweenMax.from($(this), .6, {css:{'opacity':0, 'top': bottomHeight+100}, delay: bottomStartDelay });
            bottomStartDelay += .1;
        });




    },


    buildTopGiftsSectionPage: function(section){
        console.log('buildTopGiftsSectionPage('+section+')');
        var topgifts = finder.getConfig().topgifts[section];
        var self = this;
        var one_day = 24*60*60*1000;

		// the pool DOM container
		var $container = $( ".products", this.parentDiv );
		// html template by id
		var productTemplate = "#productTopGifts";

		// load the pool
		function loadPool( url ) {
			var poolRequest = $.ajax({
				type: "GET",
				url: url,
				dataType: "jsonp",
				timeout: 30000,
				tryCount: 0,
				tryLimit: 2,
				async: true,
				success: function( data, textStatus, jqXHR ){
					console.log("pool data has been loaded successfully");
					finder.loadingDisplay.end("load_pool");
					startPool( data );
				},
				error: function( request, type, errorThrown ){
					//alert("ERROR");
					console.error( 'error loading', arguments );
					//self.loadNext();
					finder.loadingDisplay.end("load_pool");
				}
			});
		}

		// once the data is loaded do this
		function startPool( data ) {
			var tempData = BBPool.getTopTenList( data );
			self.data = tempData;
			renderPage( tempData );
		}

		// destroy and rebuild page
		function renderPage( data ) {
            console.log("!!!!!data   ",data)
			$container.empty();
			$( productTemplate ).tmpl( data ).appendTo( $container );

            //addClass to insertIndex position 0 in array object
            /*var databasic = $(data.insertIndex.length == 0);

            $(databasic).each(function(index){
                $('.product_image', index).addClass('.bigtab');

            });*/

            //$('.finderPage#topgifts .products .product').css({"background-color":"black"});

            /*var item1 = $( "li.item-1" )[ 0 ];
            $( "li.item-ii" ).find( item1 ).css( "background-color", "red" );*/


            //$('.finderPage#topgifts p.votes').append("hello world!!");
            //console.log('============>  ',   $('.finderPage#topgifts').find('.votes').first().length   );
            //var fred = $('.finderPage#topgifts').find('.votes').first()
            //fred.prepend('<img src=""sfgsf">');

            //check for insertIndex position in array
            //if equal to 0 display width/height larger properties
            /*var data.insertIndex = i;

            if(){

            }else{

            }*/
		}

		// call load pool
		var url = poolRoot + topgifts.pool;
		finder.loadingDisplay.start( "load_pool" );
		loadPool( url );


    },

	/* Transition your page in */
	transitionIn: function() {
		this._super();

	},

	/* Transition your page Out */
	transitionOut: function() {
		this._super();

	},

	/* Unload the page */
	unload: function() {

		// clear timers
		// unset events on items outside of this page.
		// unset LIVE events

		this._super();
	},

	/* Handle tracking for this page */
	handleTracking: function() {
		this._super();
	}


})

